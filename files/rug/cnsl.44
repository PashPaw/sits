	.STITLE	PDP11 CONSOLE
	.=156000
	TKS=	177560
	TKB=	177562
	TPS=	177564
	TPB=	177566
	RCSR=	174000
	RBUF=	174002
	TSCR=	174004
	TBUF=	174006
	R0=%0
	R1=%1
	R2=%2
	R3=%3
	R4=%4
	R5=%5
	SP=%6
	PC=%7
;CONSOLE PROGRAM FOR THE PDP11

START:	BR	STAR1
	BR	HERE1
	BR	RED
	BR	GWRD
	BR	HERE2
WORD:	0
RELOC:	0
STAR1:	MOV	#START-2,SP
	MOV	#1,R0
	CLR	RELOC
	JSR	PC,HERE1
	JMP	ENDCNS

HERE1:	JSR	PC,HERE2
	BR	LOAD
HERE2:	MOV	#31,R1
	MOV	R1,RCSR	;NO INTRPTS, PROPER SPEED
	MOV	R1,TSCR	;NO ITRPTS, PROPER SPEED
	CLR	TPS	;NO INTRPTS ON TTO
	CLR	TKS	;NO INTRPTS IN TTI
HERE3:	MOV	#BUFF,R5
	CLR	(R5)
	MOV	R5,R4

HERE:	TSTB	RCSR
	BMI	TENI	;CHAR ARRIVED FROM 10
THERE:	TSTB	TPS	;TTO READY?
	BMI	TTOUT
THR:	TSTB	TKS
	BPL	HERE	;NONE FROM TTY

ITTI:	MOVB	TKB,R1
ITTI1:	TSTB	TSCR	;CAN YOU SEND TO TEN YET?
	BPL	ITTI1	;LOOP UNTIL CAN
	MOVB	R1,TBUF	;SEND TYPED CHAR TO TEN
	BIC	#177600,R1
	CMP	R1,#19.	;^S
	BEQ	HERE3
	BR	HERE

TENI:	MOVB	RBUF,R1	;GET CHAR
	BIC	#177600,R1	;MASK JUNK
	CMP	R1,#1	;START OF BLOCK?
	BEQ	LOAD4
	BLT	OK	;BAD TO STRE ZERO IN BUFFER
	TST	R0
	BNE	OK2
	CMP	R1,#2	;LODER SENDS THAT AT IRST. THEN ECHO (IN RUG)
	BNE	OK
	INC	R0
OK2:	MOVB	R1,(R5)+
	CMP	R5,#BUFF+200
	BLE	OK
	MOV	#BUFF,R5
OK:	CLRB	(R5)
	BR	THERE

TTOUT:	TSTB	(R4)
	BEQ	RETRN
	MOVB	(R4)+,TPB
	CMP	R4,#BUFF+200
	BLE	RETRN
	MOV	#BUFF,R4
RETRN:	BR	THR

LOAD4:	RTS	PC

GWRD:	BR	GWORD
RED:	BR	READ

	ADRS=	%1
	CKSM=	%0
	BYTE=	%3
	BCOUNT=	%2
LOAD:	CLR	ADRS
STBLK:	JSR	PC,READ
	DECB	BYTE	;CHECK FOR +1 (START OF BLOCK)
	BNE	STBLK

GTONE:	JSR	PC,READ	;READ ANOTHER CHAR (0 THIS TIME)
	MOV	#5,BCOUNT	;WON'T SKIP IN GWORD WHEN DEC & WILL =3 AFTER
	CLR	CKSM
	JSR	PC,GWORD	;GET TOTAL BYTE COUNT
	SUB	BCOUNT,WORD	;BCOUNT=3
	CMP	BCOUNT,WORD	;DOES IS =3?
	BEQ	JMPBLK
	MOV	WORD,BCOUNT
	JSR	PC,GWORD	;GET LOAD ADDRESS
	MOV	WORD,ADRS	;PUT ADDRESS IN PROPER PLACE
	ADD	RELOC,ADRS
;READ IN REMAINDER OF DATA
LDDATA:	JSR	PC,GWORD
	TST	BCOUNT	;STILL DATA LEFT?
	BGT	LDLP
	BLT	CHECKS	;JUST CHECKSUM
	MOVB	WORD,(ADRS)+	;ONE DATA, ONE CHECKSUM
CHECKS:	INCB	CKSM
	BNE	BAD
	JSR	R5,ACK
	4
	BR	STBLK
LDLP:	MOVB	WORD,(ADRS)+
	MOVB	WORD+1,(ADRS)+
	BR	LDDATA
READ:	TSTB	RCSR	;CHAR SENT YET?
	BPL	READ	;NO
	MOVB	RBUF,BYTE
	BIC	#177600,BYTE	;MASK OFF PARITY ETC
	SUB	#40,BYTE
	;+40 AVOIDS CONTROL CHARATERS
	RTS	PC

;INSTEADOF 8 BIT FRAMES 6 BITS, THEN 4 THEN 6 WILL BE
;SENT. THIS TOTALS 16 BITS.
GWORD:	JSR	PC,READ
	MOV	BYTE,WORD	;WANT TO ZERO TOP BYTE
	JSR	PC,READ
	SWAB	BYTE
	ASR	BYTE	;DOES THIS PUT ZEROES IN ON LEFT?
	ASR	BYTE
	ADD	BYTE,WORD
	MOVB	WORD,BYTE
	ADD	BYTE,CKSM
	DEC	BCOUNT
	BEQ	DONE
	JSR	PC,READ
	SWAB	BYTE
	ASL	BYTE
	ASL	BYTE
	ADD	BYTE,WORD
	MOVB	WORD+1,BYTE
	ADD	BYTE,CKSM
DONE:	DEC	BCOUNT
	RTS	PC

JMPBLK:	JSR	PC,GWORD
	MOV	WORD,ADRS
	JSR	PC,GWORD
	INCB	CKSM
	BNE	BAD
	JSR	R5,ACK
	4
	RTS	PC

ENDCNS:	ASR	ADRS
	BCC	JUMP
	HALT
BAD:	JSR	R5,ACK
	6
	BR	STBLK
JUMP:	JSR	R5,ACK
	47	;DON'T SEND SYMBOLS
	ASL	ADRS
	JMP	(ADRS)

ACK:	TSTB	TSCR
	BPL	ACK
	MOV	(R5)+,TBUF
	RTS	R5

BUFF:	0
	.=.+200

	.END	START
